apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'


// Loads properties from the giving filepath
ext.loadProperties = { filepath ->
    def propertiesFile = new File(filepath)
    def properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))
    return properties
}

static def getDate() {
    return new Date().format('yyyyMMddHHmmss')
}

def version_code = 132
def version_major = 6
def version_minor = 2
def version_patch = 9

android {
    signingConfigs {
        release {
            def releaseConfigs = loadProperties("${project.projectDir}/signing.properties")
            storeFile file(releaseConfigs['storeFile'])
            storePassword releaseConfigs['storePassword']
            keyAlias releaseConfigs['keyAlias']
            keyPassword releaseConfigs['keyPassword']
        }
    }
    compileSdkVersion 31
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.frolo.musp"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode version_code
        versionName "${version_major}.${version_minor}.${version_patch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", applicationId + "-v" + versionCode + "(" + versionName + ")")
        multiDexEnabled true

        resValue "string", "app_name", "Frolomuse"

        buildConfigField "String", "BUILD_TIME", "\"${getDate()}\""
        buildConfigField "String", "DEVELOPER_EMAIL", "\"alexei.artsimovich@gmail.com\""
        buildConfigField ('int', "SOUND_FRAME_GAIN_COUNT", "100")

        vectorDrawables.useSupportLibrary = true

        resConfigs "de", "en", "es", "fr", "hi", "in", "ja", "pt", "ru", "tr", "zh", "uk", "ko"

        ndk {
            abiFilters "arm64-v8a", "armeabi", "armeabi-v7a", "x86", "x86_64"
        }

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".dbg"
            debuggable true
            shrinkResources false
            minifyEnabled false
            resValue "string", "app_name", "Dbg Frolomuse"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix "-D"
        }

        release {
            shrinkResources true
            minifyEnabled true
            resValue "string", "app_name", "Frolomuse"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix "-R"
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "default"
    productFlavors {
        // Version for Play Store
        playStore {

        }

        // Version for App Gallery
        appGallery {

        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "Frolomuse-${variant.name}-${version_major}.${version_minor}.${version_patch}-${getDate()}.apk"
        }
    }

    lintOptions {
        //checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        //abortOnError false
    }

    sourceSets {
        main {
        }

        test {
            java.srcDirs += "$projectDir/src/testShared"
        }

        androidTest {
            java.srcDirs += "$projectDir/src/testShared"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    packagingOptions {
        exclude 'META-INF/api_debug.kotlin_module'
        exclude 'META-INF/api_release.kotlin_module'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Music data
    implementation project(path: ':music-data:model')
    implementation project(path: ':music-data:repository:api')
    implementation project(path: ':music-data:repository:android-impl')

    // Player
    implementation project(path: ':audio:audiofx:api')
    implementation project(path: ':audio:audiofx:android-impl')
    implementation project(path: ':audio:player:api')
    implementation project(path: ':audio:player:android-impl')
    implementation project(path: ':audio:player:data')

    // Billing
    implementation project(path: ':billings:billing-api')
    playStoreImplementation project(path: ':billings:play-store-billing-impl')
    appGalleryImplementation project(path: ':billings:app-gallery-billing-impl')

    // Material design support
    implementation project(path: ':material-support')

    // Custom views
    implementation project(path: ':custom-view::equalizerview')
    implementation project(path: ':custom-view::mediabutton')

    // Custom drawables
    implementation project(path: ':custom-drawable:squircle')

    // Utils
    implementation project(path: ':utils:debug-common')
    implementation project(path: ':utils:threads-common')
    implementation project(path: ':utils:rx')
    implementation project(path: ':utils:ui')
    implementation project(path: ':utils:stopwatch')
    implementation project(path: ':utils:headset')

    // Vendor
    implementation project(path: ':vendor')

    // Audio libs
    implementation project(path: ':audio-libs:my_id3')
    //implementation group: 'org', name: 'jaudiotagger', version: '2.0.3' // https://mvnrepository.com/artifact/org/jaudiotagger
    implementation project(path: ':audio-libs:soundwaveform')
    implementation project(path: ':audio-libs:ringdroid')

    def mockito_version = "3.10.0" // 2.23.0
    def mockito_kotlin_version = "2.1.0"
    // Instrumentation tests
    androidTestImplementation "com.android.support.test:runner:1.0.2"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    androidTestImplementation project(path: ':test-tools')

    // Unit tests
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation project(path: ':test-tools')

    // multi dex
    implementation 'androidx.multidex:multidex:2.0.1'

    // architecture
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    kapt "android.arch.lifecycle:compiler:1.1.1"

    // Compat support and Material design
    implementation 'androidx.appcompat:appcompat:1.2.0'
    // Do not use v1.1.1 for preferences: it messes with image tinting
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.constraintlayout:constraintlayout:2.0.1"
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    implementation "androidx.viewpager2:viewpager2:1.1.0-beta01"
    implementation 'com.google.android:flexbox:2.0.1'
    // Fragments
    implementation "androidx.fragment:fragment-ktx:1.4.0"
    // Color palette
    implementation 'androidx.palette:palette:1.0.0'
    // MediaCompat
    implementation 'androidx.core:core:1.2.0'
    implementation 'androidx.media:media:1.4.3'

    // Useful kotlin extensions
    implementation "androidx.core:core-ktx:1.2.0"

    // rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // navigation bottom bar that controls fragments stacks
    implementation 'com.ncapdevi:frag-nav:3.2.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    // Glide transformations
    implementation 'jp.wasabeef:glide-transformations:4.0.0'

    // Sticky headers recycler view
    implementation 'com.timehop.stickyheadersrecyclerview:library:0.4.3@aar'

    // alphabet index fast scroller
    implementation 'com.l4digital.fastscroll:fastscroll:2.0.1'

    // For runtime permissions
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:26.8.0')
    implementation 'com.google.firebase:firebase-core'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-messaging'

    // DI
    def dagger_version = '2.40.5'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

//    def media2_version = "1.0.0"
//    implementation "androidx.media2:media2-player:$media2_version"

    // RxAdapter ContentResolver and SharedPreferences
    implementation 'com.github.alexei-frolo:RxContent:1.0.3'

    // Circular Progress Bar
    implementation 'com.mikhaellopez:circularprogressbar:3.0.3'

    // Gesture Image View
    implementation 'com.alexvasilkov:gesture-views:2.6.0'

    // ViewPager2 indicator
    implementation 'com.github.zhpanvip:viewpagerindicator:1.0.7'

    // Jsoup (HTML parser)
    implementation 'org.jsoup:jsoup:1.13.1'

    // Tooltips
    implementation 'com.github.sephiroth74:android-target-tooltip:release-1.3.15'

    // Room database
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:2.3.0"

    // Waveform Seek Bar
    implementation 'com.github.alexei-frolo:WaveformSeekBar:1.1'

    // Falling snow view
    implementation 'com.github.jetradarmobile:android-snowfall:1.2.1'

    // Lottie animation
    implementation 'com.airbnb.android:lottie:4.2.2'
}

apply plugin: 'com.google.gms.google-services'

if (project.hasProperty('kapt')) {
    // Reference for 'kapt' DSL: https://kotlinlang.org/docs/reference/kapt.html#java-compiler-options
    kapt {
        // we expect this closure to run over a org.jetbrains.kotlin.gradle.plugin.KaptExtension
        javacOptions {
            option("-source", "8")
            option("-target", "8")
        }
    }
}
